#!/bin/bash

# Store where spectate is installed to be able to run scripts in bin/
SPECTATE_ROOT=$( \
  cd "$(dirname $(which spectate))" && \
  cd "$(dirname $(readlink spectate))/.." && \
  pwd \
)

spectate_update() {
  echo "Spectate has updated a lot."
  echo "Please run `npm link` in the Spectate directory (~/spectate)."
}

spectate_download() {
  echo "Spectate has updated a lot."
  echo "Please run `npm link` in the Spectate directory (~/spectate)."
}

spectate_create() {
  echo "Spectate has updated a lot."
  echo "Please run `npm link` in the Spectate directory (~/spectate)."
}

spectate_init() {
  echo "Spectate has updated a lot."
  echo "Please run `npm link` in the Spectate directory (~/spectate)."
}

spectate_clone() {
  spectate_update

  log "Cloning repository..."
  if git clone git@github.com:graphicsdesk/"$2".git ; then
    log "Installing node packages..."
    npm --prefix "$2" install "$2"
  fi
}

spectate_build() {
  echo "Spectate has updated a lot."
  echo "Please run `npm link` in the Spectate directory (~/spectate)."
}

upload_assets() {
  echo "Spectate has updated a lot."
  echo "Please run `npm link` in the Spectate directory (~/spectate)."
}

publish() {
  echo "Spectate has updated a lot."
  echo "Please run `npm link` in the Spectate directory (~/spectate)."
}

prepublish() {
  echo "Spectate has updated a lot."
  echo "Please run `npm link` in the Spectate directory (~/spectate)."
}

# Publishes on a gh-pages branch which lives in a working tree in dist
gh_publish() {
  echo "Spectate has updated a lot."
  echo "Please run `npm link` in the Spectate directory (~/spectate)."
}

# Takes intended command
COMMAND=$1

case $COMMAND in
  create) spectate_create "$@" ;;
  init) spectate_init ;;
  clone) spectate_clone "$@" ;;
  download) spectate_download ;;
  download-data) spectate_download_data ;;
  build) spectate_build ;;
  upload-assets) upload_assets ;;
  prepublish) prepublish ;;
  publish) publish ;;
  gh-publish) gh_publish ;;
  update) spectate_update ;;

  *)
    if [ -z "$COMMAND" ]; then
      echo "usage: spectate <command>"
      echo
      echo "These are common Spectate commands:"
      echo "  create        Create a Spectate project"
      echo "  init          Set remote links for a newly created project"
      echo "  clone         Clone an existing Spectate project"
      echo "  download      Download the Google Doc"
      echo "  build         Clear the contents of dist/ and npm run build"
      echo "  prepublish    Configure public S3 URL"
      echo "  publish       Build and upload assets"
      echo "  gh-publish    Publish and push to a gh-pages branch"
      echo "  update        Update the Spectate repository itself"
    else
      echo "Unknown command: $COMMAND"
    fi
esac
