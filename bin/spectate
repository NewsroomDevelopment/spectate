#!/bin/bash

OLDWD="$PWD"
cd "$(dirname $(which spectate))" && cd "$(dirname $(readlink spectate))/.."
SPECTATE_ROOT="$PWD"
cd "$OLDWD"

COMMAND=$1

CYAN='\033[36m'; BOLD='\033[1m'; NOCOLOR='\033[0m'
log() {
  echo -e "\n${CYAN}[$(date '+%Y-%m-%d %H:%M:%S')] ${BOLD}$1${NOCOLOR}\n"
}

spectate_update() {
  log "Updating Spectate..."
}

spectate_create() {
  log "Copying default template and keys..."
  cp -vR "$SPECTATE_ROOT/template"/. .
  cp -vR "$SPECTATE_ROOT/keys"/*.json ./process

  if [ -f package.json ]; then
    log "Installing node packages..."
    npm install
  fi

  if [ ! -d ".git" ]; then
    log "Initiating git repository..."
    git init
  fi

  git add .
  git status
}

spectate_init() {
  SLUG=
  # Slug prompt
  while [ -z "$SLUG" ]; do
    echo -n "Enter a slug: "
    read SLUG

    if [[ $(git ls-remote "git@github.com:spec-journalism/$SLUG" 2>&1 | head -n 1) == "ERROR:"* ]]; then
      echo "@spec-journalism/$SLUG does not exist."
      SLUG=
    fi
  done

  git remote add origin "git@github.com:spec-journalism/$SLUG.git"
  git remote -v
}

case $COMMAND in
  create) spectate_update
    spectate_create ;;
  init) spectate_init ;;
  config-docs) node $SPECTATE_ROOT/bin/config-docs.js "$@" ;;

  *) 
    if [ -z $COMMAND ]; then
      echo "usage: spectate <command>"
      echo
      echo "These are common Spectate commands:"
      echo "  create        Create a project from a template"
      echo "  init          Add git remotes"
      echo "  config-docs   Reset Google Docs authentication"
    else
      echo "Unknown command: $COMMAND"
    fi
esac
