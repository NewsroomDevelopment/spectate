#!/bin/bash

# Store where spectate is installed to be able to run scripts in bin/
SPECTATE_ROOT=$( \
  cd "$(dirname $(which spectate))" && \
  cd "$(dirname $(readlink spectate))/.." && \
  pwd \
)

# Utility functions for logging
CYAN='\033[36m'; BOLD='\033[1m'; NOCOLOR='\033[0m'
log() {
  echo -e "\n${CYAN}[$(date '+%Y-%m-%d %H:%M:%S')] ${BOLD}$1${NOCOLOR}"
  # Append newline, unless otherwise noted by the existence of a second arg
  if [ -z "$2" ]; then
    echo ""
  fi
}
log_small() {
  echo -e "\n${CYAN}$1${NOCOLOR}"
}

# Download Google Doc and write .posthtmlrlc
spectate_download() {
  log "Downloading and parsing Google Doc..."
  node "$SPECTATE_ROOT"/bin/download-doc.js
}

# Creates a Spectate project from scratch
spectate_create() {
  spectate_update
  node "$SPECTATE_ROOT"/bin/spectate-create.js
}

# Set remote links for a newly created project
spectate_init() {
  log "Prompting for remote links..."
  node "$SPECTATE_ROOT"/bin/spectate-init.js
}

# Clones a spectate project repository and installs node packages
spectate_clone() {
  spectate_update

  log "Cloning repository..."
  if git clone git@github.com:graphicsdesk/"$2".git ; then
    log "Installing node packages..."
    npm --prefix "$2" install "$2"
  fi
}

# Clears dist folder and builds for production
spectate_build() {
  log "Creating production build..." 0
  rm -f dist/*
  npm run build
}

# Uploads assets to S3 using AWS Node SDK
upload_assets() {
  log "Uploading assets..."
  node "$SPECTATE_ROOT"/bin/upload-assets.js
}

# Builds and uploads assets
publish() {
  spectate_build
  upload_assets
}

# Uploads assets to S3 using AWS Node SDK
prepublish() {
  log "Setting public S3 URL..."
  node "$SPECTATE_ROOT"/bin/prepublish.js
}

# Publishes on a gh-pages branch which lives in a working tree in dist
gh_publish() {
  # Check out gh-pages into a new working tree in dist if one doesn't already exist
  if [[ $(git worktree list) != *"/dist "* ]]; then
    log "Checking out new gh-pages branch into dist working tree"
    rm -rf dist
    mkdir dist
    git worktree add dist -B gh-pages
    rm -rf dist/* dist/.gitignore dist/.posthtmlrc
  fi

  publish

  log "Pushing changes to origin gh-pages..."
  (cd dist && git add . && git commit -m 'Deploy to gh-pages' && git push origin gh-pages -f)
}

# Takes intended command
COMMAND=$1

case $COMMAND in
  create) spectate_create "$@" ;;
  init) spectate_init ;;
  clone) spectate_clone "$@" ;;
  download) spectate_download ;;
  download-data) spectate_download_data ;;
  build) spectate_build ;;
  upload-assets) upload_assets ;;
  prepublish) prepublish ;;
  publish) publish ;;
  gh-publish) gh_publish ;;
  update) spectate_update ;;

  *)
    if [ -z "$COMMAND" ]; then
      echo "usage: spectate <command>"
      echo
      echo "These are common Spectate commands:"
      echo "  create        Create a Spectate project"
      echo "  init          Set remote links for a newly created project"
      echo "  clone         Clone an existing Spectate project"
      echo "  download      Download the Google Doc"
      echo "  build         Clear the contents of dist/ and npm run build"
      echo "  prepublish    Configure public S3 URL"
      echo "  publish       Build and upload assets"
      echo "  gh-publish    Publish and push to a gh-pages branch"
      echo "  update        Update the Spectate repository itself"
    else
      echo "Unknown command: $COMMAND"
    fi
esac
